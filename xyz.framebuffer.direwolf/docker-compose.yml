services:
  postgres:
    image: postgres:latest
    environment:
      POSTGRES_DB: $POSTGRES_DB
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d postgres"]
      interval: 5s
      timeout: 2s
      retries: 20 
    ports:
      - 5432:5432
    expose:
      - 5432
    networks:
      - prisma-network

  frontend:
    container_name: frontend-dev
    build:
      context: .
      target: dev
    restart: always
    command: npm run docker:dev
    environment:
      - NODE_ENV=development
    ports:
      - 3000:3000
    env_file: .env
    depends_on:
      - postgres
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    networks:
      - prisma-network
    
  prisma-studio:
      image: node:lts-alpine3.17
      working_dir: /usr/src/app
      volumes:
        - .:/usr/src/app
      command: npx prisma studio --port 5555 --browser none
      ports:
        - "5555:5555"
      env_file:
        - .env
      networks:
        - prisma-network
      depends_on:
        postgres:
          condition: service_healthy
        frontend:
          condition: service_started

networks:
  prisma-network:
    name: prisma-network